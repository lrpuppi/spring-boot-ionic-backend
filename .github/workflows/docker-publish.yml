name: Docker Build/Publish Image 
on:  
  push:    
    branches: [ oci-features ]  
jobs:   
  build:    
    runs-on: ubuntu-latest   
    permissions:
      contents: read
      packages: write
    env:      
      DOCKER_REGISTRY: registry-1.docker.io
      DOCKER_IMAGE: lrpuppi/spring-boot-ionic-backend    
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      DOCKER_TARGET_PLATFORM: linux/arm64/v8     
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        id: jdk11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Check built file
        run: ls -l target/*.jar

      - name: Prepare      
        if: success()      
        id: prepare      
        run: |        
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
          echo ::set-output name=docker_image::${DOCKER_IMAGE}        
          echo ::set-output name=version::${GITHUB_RUN_NUMBER} 
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: JAR_FILE=target/*.jar
          file: Dockerfile
          platforms: ${{ steps.prepare.outputs.docker_platform }}
          push: true
          tags: ${{ steps.prepare.outputs.docker_image }}:arm64
      
